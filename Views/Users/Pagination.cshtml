@using InventorySystem.Models.Pagination
@model ItemListViewModel
@{
    Layout = null;
    var currentPage = Model.CurrentPage; // Store the current page number for use in JavaScript
    var totalPages = Model.TotalPages; // Store total pages for use in JavaScript
}



<script>

    var currentPage = @currentPage;  // Current page number
    var totalPages = @totalPages;    // Total number of pages

    // Update pagination buttons and links
    function updatePagination() {
        // Update "Previous" button
        if (currentPage <= 1) {
            $('.pagination .prev').addClass('disabled').attr('href', '#').off('click');
        } else {
            $('.pagination .prev').removeClass('disabled').attr('href', '#').on('click', function (e) {
                e.preventDefault();
                loadItems(currentPage - 1);
            });
        }

        // Update "Next" button
        if (currentPage >= totalPages) {
            $('.pagination .next').addClass('disabled').attr('href', '#').off('click');
        } else {
            $('.pagination .next').removeClass('disabled').attr('href', '#').on('click', function (e) {
                e.preventDefault();
                loadItems(currentPage + 1);
            });
        }

        // Highlight the current page
        $('.pagination a').removeClass('active');
        $('.pagination a').each(function () {
            var href = $(this).attr('href');
            var page = new URLSearchParams(href.split('?')[1]).get('page');
            if (parseInt(page) === currentPage) {
                $(this).addClass('active');
            }
        });
    }

    // Load items for the specified page
    function loadItems(page) {
        $.ajax({
            url: '@Url.Action("ItemTable", "Users")',
            data: { page: page },
            success: function (data) {
                $('#view-all').html(data);
                currentPage = page;  // Update currentPage
                updatePagination();
            },
            error: function (xhr) {
                console.error(xhr);
            }
        });
    }



    $(document).ready(function () {
        // Initialize pagination on page load
        updatePagination();

        // Handle pagination clicks
        $(document).on('click', '.pagination a:not(.disabled)', function (e) {
            e.preventDefault();
            var href = $(this).attr('href');
            var page = new URLSearchParams(href.split('?')[1]).get('page');
            if (page) {
                let category = $('.ctg-selected').data('string');
                loadPage(category, parseInt(page));
            }
        });
    });


</script>
<!-- Pagination -->
@if (Model.TotalPages > 1)
{
    <div class="pagination mt-3">
        @if (Model.CurrentPage > 1)
        {
            <a href="@Url.Action("ItemTable", new { page = Model.CurrentPage - 1 })" class="prev">Previous</a>
        }
        else
        {
            <a href="#" class="prev disabled">Previous</a>
        }

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <a href="@Url.Action("ItemTable", new { page = i })" class="@(Model.CurrentPage == i ? "active" : "")">@i</a>
        }

        @if (Model.CurrentPage < Model.TotalPages)
        {
            <a href="@Url.Action("ItemTable", new { page = Model.CurrentPage + 1 })" class="next">Next</a>
        }
        else
        {
            <a href="#" class="next disabled">Next</a>
        }
    </div>
}