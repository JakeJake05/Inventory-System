@using InventorySystem.Models.Pagination
@using System.Security.Claims;
@model ItemListViewModel
@{
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
    var CurrentUsername = ViewBag.Username as string;
    var CurrentUserid = ViewBag.UserId as int?;
    var message = ViewBag.SuccessMessage as string;
    var currentPage = Model.CurrentPage; // Store the current page number for use in JavaScript
    var totalPages = Model.TotalPages; // Store total pages for use in JavaScript
    var pageSize = ViewBag.PageSize;
    var userIdClaim = User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.NameIdentifier)?.Value;
    var storedClaim = int.Parse(userIdClaim!);
}

<script>
    var currentUsername = '@Html.Raw(CurrentUsername)';
    var currentPage = '@Html.Raw(currentPage)';
    var info = $('#layoutbody #message-success');
    document.addEventListener('DOMContentLoaded', () => {
        $('#username-container').text(currentUsername);
        info.text(`Welcome ${currentUsername.toUpperCase()}!`).fadeIn().delay(1000).fadeOut();   
    });

    $(document).on('hidden.bs.modal', '.container #dynamic-modal', function (e) {
        $(this).remove();
    });
        
    $(document).ready(function () {
        var activeCategory = "All";

        $('#sidebar .nav-link[data-url="dashboard/item-view/all"]').addClass('active bgc-orange');
        $('.category-button[data-string="All"]').addClass('ctg-selected');

        loadContent('dashboard/item-view/all');

        toggleNavbar('dashboard/item-view/category');
        
        $('#sidebar .nav-link').on('click', function (e) {
            e.preventDefault();

            // Disable all links
            $('#sidebar .nav-link').addClass('disabled');
            $('#searchbar').val('');

            let url = $(this).data('url');
            console.log(url);
            clickedElementId = $(e.target).attr('id');

            if (url === 'dashboard/item-view/category') {            
                let category = $('.ctg-selected').data('string');

                activeCategory = category;

                setTimeout(() => {
                    loadItemsByCategory(activeCategory, 1);
                }, 20); 

                
            }
            console.log('url: ', url);
            $(this).addClass('active');
            $(this).find('.spinner').show();
            loadContent(url);
            //toggleSearchContainer(url);    
            //toggleSummaryNavbar(url);
            toggleNavbar(url);

          
        });
 

        $('#user-logout').on('click', function(event){
            event.preventDefault();
            apiService.logoutRequest('@Url.Action("Logout", "ValidateApi", new { username = CurrentUsername })');
        });

        $('#searchbar').on('input', function () {
            var itemcode = $(this).val().trim(); // Get the trimmed search term
            let category = $('.ctg-selected').data('string'); // Get the current active category
            activeCategory = category;

            // If search term is not empty, perform search, otherwise load items by category
            if (itemcode === "") {
                loadItemsByCategory(category, 1); // Load items of the selected category if search bar is empty
            } else {
                loadItems(itemcode, activeCategory, 1); // Load items based on search term
            }
        });

        // Optionally, you can remove the blur event since input handling is generally sufficient


        $('#searchbar').on('blur', function () {
            var itemcode = $(this).val().trim(); // Get the trimmed search term

            let category = $('.ctg-selected').data('string');
            activeCategory = category;

            // If search term is not empty, perform search, otherwise load items by category
            if (itemcode === "") {
                loadItemsByCategory(category, 1);
            } else {
                loadItems(itemcode, activeCategory, 1);
            }
        });

       
        $('.category-button').on('click', function(){
            $(this).html('');
            $(this).html('<i class="fa fa-spinner fa-spin spinner m-0 pt-1" style="font-size: 0.8rem;">');
            let category = $(this).data('string');
            activeCategory = category;
            
            setTimeout(()=>{
                let itemcode = $('#searchbar').val().trim();
                if (itemcode === "") {
                    loadItemsByCategory(category, 1);
                    $(this).text('');
                    $(this).html(category);
                } else{
              
                    loadItems(itemcode, activeCategory, 1);
                    $(this).text('');
                    $(this).html(category);
                
                }
            },50);

            console.log('current category: ', activeCategory);
            $('#category-buttons .category-button').addClass('disabled'); // Disable buttons during loading
            $('.category-button').removeClass('ctg-selected'); // Remove selected class from all
            $(this).addClass('ctg-selected'); // Add selected class to clicked one         
        });

 
    });


</script>

<style>


    #searchbar {
        font-size: 0.8rem;
    }

        #searchbar:focus {
            border: 1px solid darkorange !important;
            outline: none;
            box-shadow: none;
        }
        #searchbar:active {
            border: 1px solid darkorange !important;
            outline: none;
            box-shadow: none;
        }

    .search-icon-container {
        cursor: pointer;
        background-color: white;

    }

    .bi-plus-square{
        margin-top: 0.2rem;
        margin-left: 0.8rem;
    }
  

    .button-text{
        font-size: 0.8rem;
    }

    .category-label{
        font-size: 0.8rem; 
        
    }

    .category-button-radius{
        border-radius:4px;
        font-size: 0.8rem;
        width: 4rem;
        padding: 1px;
    }

    /* Remove default list styles from ul */
    #category-buttons {
        list-style: none; /* Remove bullets */
        padding-left: 0; /* Remove default padding */
        
    }
        

        #category-buttons li {
            display: inline; /* Ensure the buttons are inline */
            
        }

        #category-buttons button{
            font-size: 0.8rem;
        }

    /* Optional styling for category buttons */
    .category-button {
        margin-left: 10px;
    }


    .title-sm{
        margin-left: 0;
    }
</style>

<!-- Main Content Area --> 
<div id="main-content" class="d-flex flex-column p-3 container-fluid mt-4">

    <nav class="d-flex flex-column p-0 position-relative container-fluid mt-4" id="dashboard-nav">
        <!-- Searchbar and Create Button Container -->
        <div class="d-flex justify-content-between align-items-center mb-2 w-auto" id="searchbarAndCreateButtonContainer">
            <!-- Searchbar -->
            <div class="input-group search-container border-0">
                <div class="input-group-prepend rounded border-0">
                    <div class="input-group-text search-icon-container pt-0 pb-0 pe-0" title="Search">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search text-orange" viewBox="0 0 16 16">
                            <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0" />
                        </svg>
                        <input type="search" id="searchbar" class="form-control border-0 ms-1" placeholder="Search by code" autocomplete="off">
                    </div>
                </div>
            </div>

            <!-- Add Button -->
            <div class="">
                <button class="btn bgc-orange btn-sm text-light d-flex" onclick="ModalShow('dashboard/add-item')" style="font-size:0.7rem;">
                    <svg xmlns="http://www.w3.org/2000/svg" width="13" height="13" fill="currentColor" class="bi bi-plus-square" viewBox="0 0 16 16">
                        <path d="M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z" />
                        <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4" />
                    </svg>
                    <span class="button-text">Item</span>
                </button>
            </div>
        </div>

        <!-- Category Container (now placed below) -->
        <div class="d-flex align-items-center mt-2" id="categoryListContainer">
            <span class="me-1 text-muted category-label">Category:</span>
            <ul class="list-group list-group-horizontal" id="category-buttons">
                <li>
                    <button class="ms-1 btn-sm outline-orange ctg-notselected category-button-radius category-button" data-string="All">
                        All <i class="fa fa-spinner fa-spin spinner" style="display: none;"></i>
                    </button>
                </li>
                <li>
                    <button class="ms-1 btn-sm category-button-radius ctg-notselected category-button" data-string="Robots">
                        Robots <i class="fa fa-spinner fa-spin spinner" style="display: none;"></i>
                    </button>
                </li>
                <li>
                    <button class="ms-1 btn-sm category-button-radius ctg-notselected category-button" data-string="Books">
                        Books <i class="fa fa-spinner fa-spin spinner" style="display: none;"></i>
                    </button>
                </li>
                <li>
                    <button class="ms-1 btn-sm category-button-radius ctg-notselected category-button" data-string="Materials">
                        Materials <i class="fa fa-spinner fa-spin spinner" style="display: none;"></i>
                    </button>
                </li>
            </ul>
            <style>

                #uploadButton {
                    font-size: 0.8rem;
                }
                #uploadButton:hover{
                    background-color: #fd7e14 !important;
                    color: white !important;
                }
            </style>



            <div class="ms-auto">
                <button class="text-orange bg-none outline-orange rounded" id="uploadButton" title="Import CSV File" onclick="ModalShow('dashboard/import-file')">
                    <i class="fa fa-upload" aria-hidden="true"></i>
                </button>
            </div>
        </div>
    </nav>





    <nav id="summary-nav" class="p-0 position-relative container-fluid mt-4">
        Summary
    </nav>

    <nav id="requests-nav" class="p-0 position-relative container-fluid mt-4">
        Requests
    </nav>

    <!-- Content -->
    <div id="view-all" class="border-top border-warning pt-3 mt-3">

    </div>
    
</div>

@section Scripts {
   
}

