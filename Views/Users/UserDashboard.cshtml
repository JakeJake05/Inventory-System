@using InventorySystem.Models.Pagination
@using System.Security.Claims;
@model ItemListViewModel
@{
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
    var CurrentUsername = ViewBag.Username as string;
    var CurrentUserid = ViewBag.UserId as int?;
    var message = ViewBag.SuccessMessage as string;
    var currentPage = Model.CurrentPage; // Store the current page number for use in JavaScript
    var totalPages = Model.TotalPages; // Store total pages for use in JavaScript
    var pageSize = ViewBag.PageSize;
    var userIdClaim = User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.NameIdentifier)?.Value;
    var storedClaim = int.Parse(userIdClaim!);
}

<script>
    const currentUsername = '@Html.Raw(CurrentUsername)';
    var info = $('#layoutbody #message-success');
    document.addEventListener('DOMContentLoaded', () => {
        $('#username-container').text(currentUsername);
        info.text(`Welcome ${currentUsername.toUpperCase()}!`).fadeIn().delay(1000).fadeOut();        
    });

</script>


<!-- Main Content Area -->
<div id="main-content" class="d-flex flex-column mt-5 p-3">
    <div id="top-bar" class="d-flex justify-content-between bg-dark text-white container-fluid fixed-top ">
        <div class="ms-5 ps-4">
            <!--For Seacrhbar-->
        </div>
    </div>
    <div class="d-flex justify-content-between mt-1  p-0 container-fluid position-relative">
        <div class="ms-0 mt-2">
            <h4 class="d-flex">ITEMS</h4>
        </div>
        <div id="screensizer">
        </div>
        <div class="d-flex align-items-center m-0">
            <button class="btn btn-success" onclick="ModalShow('dashboard/add-item')">Add Item</button>
        </div>

    </div>


    <!-- Content -->


    <div id="view-all" class="container-fluid p-0 mt-3">


        @await Html.PartialAsync("ItemView", Model)


    </div>


    <!-- Pagination -->
    <!--div class="pagination position-fixed bottom-0">
    </!--div-->
    <!-- Pagination Controls -->
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @if (Model.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="javascript:void(0);" onclick="loadPage(@(Model.CurrentPage - 1))">Previous</a>
                </li>
            }

            @for (var i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" href="javascript:void(0);" onclick="loadPage(@i)">@i</a>
                </li>
            }

            @if (Model.CurrentPage < Model.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="javascript:void(0);" onclick="loadPage(@(Model.CurrentPage + 1))">Next</a>
                </li>
            }
        </ul>
    </nav>

</div>

@section Scripts {
    <script>

        $(document).ready(function () {

            $('#add-item').on('submit', function (e) {
                e.preventDefault();

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("AddItem", "Users", new { username = ViewBag.Username })',
                    data: $(this).serialize(),
                    success: function (response) {
                        if (response.success) {
                            var newItem = $(response.itemViewHtml);
                            var itemContainer = $('#view-all .card-container');
                            var itemCount = itemContainer.children().length; // Get the current number of items displayed

                            if (itemCount < @pageSize) {
                                // Append the new item if there is space
                                itemContainer.append(newItem.hide().fadeIn(1000));
                            } else {
                                // Handle item overflow (move to the next page)
                                handlePaginationUpdate();
                            }

                            // Scroll and show success message
                            newItem.hide().fadeIn(1000);
                            $('html, body').animate({
                                scrollTop: newItem.offset().top
                            }, 1000);
                            showSuccessMessage('Item added successfully!');

                            // Close the modal
                            $('#crud-modal').modal('hide');
                            $('#add-item')[0].reset();
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function () {
                        alert('An error occurred while adding the item.');
                    }
                });
            });
  
            function handlePaginationUpdate() {
                // Logic to handle item overflow due to pagination
                // Reload the item list for the current page to include the new item
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("ItemView", "Users", new { username = ViewBag.Username, page = currentPage + 1 })', // Load the next page
                    success: function (response) {
                        $('#view-all .card-container').html(response); // Update the current items with new data
                        currentPage += 1; // Increment the page number
                        showSuccessMessage('New page loaded with added item.');
                    }
                });
            }

            function showSuccessMessage(message) {
                var successMessage = $('<div class="alert alert-success" role="alert"></div>').text(message);
                $('body').prepend(successMessage);
                successMessage.hide().fadeIn(500).delay(2000).fadeOut(500, function () {
                    $(this).remove();
                });
            }
        });

        function loadPage(page) {
            $.ajax({
                url: '@Url.Action("ItemView", "Users", new { username = ViewBag.Username })' + '?page=' + page,
                type: 'GET',
                success: function (response) {
                    $('#view-all').html(response);
                }
            });
        }
    </script>
}

