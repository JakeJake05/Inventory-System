@using InventorySystem.Models.DataEntities
@model Item;

@{
    ViewData["Title"] = "User Details";
    string catergoryFromModel = ViewBag.Category;
    Layout = null;
}
<script>

    $(document).on('hidden.bs.modal', '.container #dynamic-modal', function (e) {
        $(this).remove();
    });

    $(document).ready(function () {
        var categoryFetched = "@Html.Raw(catergoryFromModel)";
        //changeBgBaseOnCategory(baseOnCategory, firmware, status, category)
        changeBgBaseOnCategory(categoryFetched, '#firmware-status', '#item-status', '#item-category');
        changeBgBaseOnCategory(categoryFetched, '#item-status', '#item-status', '#item-category');
    });

</script>

<style>
    .status-header {
        width: 6rem;
        font-size: 0.9rem;
    }

    .status-body, .status-view {
        border-radius: 12px;
        /*background-color: lightslategray;*/
        color: white;
        padding-left: 0.4rem;
        padding-right: 0.4rem;
        height: 1.2rem;
        font-size: 0.8rem;
        display: flex;
        justify-content: center; /* Centers text horizontally */
        align-items: center; /* Centers text vertically */
        text-align: center; /* For multiline content */
    }

    .status-view{
        margin-top: 0.7rem;
        margin-left: 0.7rem;
    }

    .date-header {
        font-size: 0.9rem;
    }

    .date-body {
        font-size: 0.8rem;
    }

</style>

<h5 class="pt-2 d-flex">
    <strong class="pt-1">Item Details</strong>
    <a class="ms-auto fs-5 btn btn-danger d-inline-flex" id="deleteButton" onclick="ModalShow('dashboard/remove/@Model.ItemId')">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash text-light" viewBox="0 0 16 16">
            <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z" />
            <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z" />
        </svg>
    </a>
</h5>

<hr class="mt-0 mb-0"/>

<div class="row mt-0">
    <dl class="mb-0">

        <div class="d-flex" style="font-size: 0.9rem;">
            @if (catergoryFromModel == "Books")
            {
                <dt class="d-flex col-sm-2 w-50">
                    @Html.DisplayName("ISBN")
                </dt>
                <dt class="d-flex col-sm-2 w-50 border-start ps-2">
                    @Html.DisplayName("Title")
                </dt>
            }
            else
            {
                <dt class="d-flex col-sm-2 w-50">
                    @Html.DisplayNameFor(model => model.ItemCode)
                </dt>
                <dt class="d-flex col-sm-2 w-50 border-start ps-2">
                    @Html.DisplayNameFor(model => model.ItemName)
                </dt>
            }          
        </div>

        <div class="d-flex" style="font-size: 0.8rem;">
            <dd class="d-flex col-sm-10 text-break w-50">
                @Html.DisplayFor(model => model.ItemCode)
            </dd>
            <dd class="d-flex col-sm-10 text-break w-50 border-start ps-2">
                @Html.DisplayFor(model => model.ItemName)
            </dd>
        </div>



        <div style="font-size: 0.9rem;">
            <dt class="col-sm-2 w-auto">
                @Html.DisplayNameFor(model => model.ItemDescription)
            </dt>
            @if (!String.IsNullOrEmpty(Model.ItemDescription))
            {
                <dd class="col-sm-10  border p-2" style="font-size: 0.8rem;">
                    @Html.DisplayFor(model => model.ItemDescription)
                </dd>
            }
            else
            {
                <dd class="col-sm-10 border w-auto p-2" style="font-size: 0.8rem;">
                    No Description
                </dd>
            }

            
        </div>
    </dl>

    <div id="ViewBaseOnCategory">
        @if (Model.Category == "Robots")
        {
            @await Html.PartialAsync("~/Views/Users/components/HasFirmwareView.cshtml")
        }
        else
        {
            @await Html.PartialAsync("~/Views/Users/components/NoFirmwareView.cshtml")
        }
    </div>



</div>
<div class="form-group m-0 d-flex">
    <a onclick="ModalShow(`dashboard/modify/@Model.ItemId`)" class="btn btn-sm w-25 btn-success ms-auto">Modify</a>
    <input type="button" value="Cancel" class="ms-2 btn btn-sm w-25 btn-outline-secondary" data-bs-dismiss="modal" />
</div>
