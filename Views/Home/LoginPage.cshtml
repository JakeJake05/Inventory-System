@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model InventorySystem.Models.Accounts.LoginModel


<script>
    $(document).ready(function () {
        var errorinfo = $('#layoutbody #error-message');
        $('#user-login .form-group #loginbutton').html('Login');

        $(document).on('hidden.bs.modal', '#container-main #display-modal', function (e) {
            $(this).remove();
            errorinfo.text('');
        });

        $(document).on('hidden.bs.modal', '.container #dynamic-modal', function (e) {
            $(this).remove();
        });

        var passwordInput = $('#password');
        var thisIsIcon = $('.icons-container .show-password');
        var containsIcon = $('.show-icon');

        ShowPassword(passwordInput, containsIcon, thisIsIcon);
    });
</script>

<style>
    .icons-size{
        font-size: 0.8rem;
        color: #fd7e14 !important;
    }
    .user-input{
        height: 2.2rem;
    }
    .icons-container{
        height: 2.2rem;
    }

    .user-input:focus {
        outline: none;
        border-color: none;
        box-shadow: none;
        outline: #fd7e14 !important;
        border-color: #fd7e14 !important;
    }
</style>

<h6 class="text-center">User Login</h6>
<hr />
<div class="row justify-content-center align-items-center">

    <form asp-controller="ValidateApi" asp-action="Login" id="user-login" method="post" class="forms" onsubmit="return UserRequest(this);" autocomplete="off">
        <div class="form-group">
            <label asp-for="Username" for="username" class="control-label mt-2"></label>
            <div class="input-group ">
                <div class="input-group-prepend icons-container">
                    <div class="input-group-text icons-container">

                        <i class="fa-solid fa-user icons-size"></i>

                    </div>
                </div>
                <input asp-for="Username" type="text" class="form-control user-input" id="username" name="username"
                       autocomplete="off"
                       required
                       placeholder="Username or Email"
                       maxlength="64"
                       data-val="true"
                       data-val-required="Username or Email is required!" />
            </div>
            <span asp-validation-for="Username" id="username-error" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Password" for="password" class="control-label mt-2"></label>
            <div class="input-group">
                <div class="input-group-prepend icons-container">
                    <div class="input-group-text icons-container">

                        <i class="fa-solid fa-lock icons-size"></i>

                    </div>
                </div>
                <input asp-for="Password" type="password" class="form-control user-input" id="password" name="password"
                       autocomplete="off"
                       placeholder="Password"
                       required
                       maxlength="128"
                       data-val="true"
                       data-val-required="Password is required!" />
                <div class="input-group-append show-icon">
                    <div class="input-group-text icons-container">
                        <i class="fa-regular fa-eye icons-size show-password"></i>
                    </div>
                </div>
            </div>
            <span asp-validation-for="Password" id="password-error" class="text-danger"></span>
        </div>

        <div class="form-group mt-3">
            <button type="submit" class="btn bgc-orange form-control text-light" id="loginbutton"> </button>
            <a onclick="ModalShow('@Url.Action("SignUp", "Home")')" class="btn btn-success form-control mt-3">Sign Up</a>
        </div>

    </form>

    <!--Error message container -->
    <!--if (ViewData.ModelState.Values.Any(v => v.Errors.Any()))
    {
        <div id="error-message" class="alert alert-danger mt-3 text-break">
            foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <p>error.ErrorMessage</p>
            }
        </div>
    }-->

</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

}